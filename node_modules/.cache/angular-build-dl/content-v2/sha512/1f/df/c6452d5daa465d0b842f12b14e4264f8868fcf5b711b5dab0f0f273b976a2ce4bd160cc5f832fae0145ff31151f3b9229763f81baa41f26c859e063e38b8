{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/signin/signin.component.ts","webpack:///src/app/auth/signin/signin.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/my-firestore.ts","webpack:///src/app/restaurant-ranking/modal.component.ts","webpack:///src/app/restaurant-ranking/restaurant-ranking.component.ts","webpack:///src/app/restaurant-ranking/restaurant-ranking.component.html","webpack:///src/app/restaurants/restaurants.component.ts","webpack:///src/app/restaurants/restaurants.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/restaurant.service.ts","webpack:///src/app/suggestion-form/suggestion-form.component.ts","webpack:///src/app/suggestion-form/suggestion-form.component.html","webpack:///src/app/suggestion-list/suggestion-list.component.html","webpack:///src/app/suggestion-list/suggestion-list.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","authService","restauService","resetAllRestaurants","onAuthStateChanged","user","isAuth","signOutUser","onResetAll","selector","templateUrl","styleUrls","AppModule","initializeApp","declarations","providers","bootstrap","SigninComponent","formBuilder","router","initForm","signInForm","group","email","required","password","pattern","get","value","signInUser","navigate","error","errorMessage","onSubmit","SignupComponent","signUpForm","createNewUser","materials","MaterialModule","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ModalComponent","rs","dialogRef","data","close","deleteRestaurant","result","onNoClick","onConfirmDelete","template","RestaurantRankingComponent","dialog","changes","restaurants$","currentValue","pipe","restaurants","sortResult","sort","sortByScore","sortedBestRestaurants","slice","sortedRestOfRestaurants","subscribe","a","b","votes","restaurant","name","openDialog","open","width","afterClosed","modalResult","RestaurantsComponent","AuthService","reject","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","providedIn","RestaurantService","firestore","collection","add","createdAt","Date","now","ref","orderBy","doc","update","toPromise","querySnapshot","forEach","SuggestionFormComponent","builder","restaurantService","suggestionForm","createRestaurant","formDirective","resetForm","addRestaurant","SuggestionListComponent","readRestaurants","restaurantsCollection","valueChanges","idField","voteForRestaurant","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\n\n\nconst routes: Routes = [\n  { path: 'restaurants', component: RestaurantsComponent },\n  //{ path: 'auth/signup', component: SignupComponent },\n  { path: 'auth/signin', component: SigninComponent },\n  { path:'', redirectTo:'restaurants', pathMatch:'full' },\n  { path:'**', redirectTo:'restaurants' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { RestaurantService } from './services/restaurant.service';\nimport * as firebase from 'firebase';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  isAuth: boolean;\n  \n  constructor(private authService: AuthService, private restauService: RestaurantService) {}\n\n  onResetAll() {\n    this.restauService.resetAllRestaurants();\n  }\n\n  ngOnInit(): void {\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        if (user) {\n          this.isAuth = true;\n        } else {\n          this.isAuth = false;\n        }\n      }\n    );\n  }\n\n  onSignOut() {\n    this.authService.signOutUser();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" *ngIf=\"isAuth\" (click)=\"drawer.toggle()\">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <span>On mange où ?</span>\n    <span class=\"spacer\"></span>\n    <button mat-button routerLink=\"/restaurants\">\n      <mat-icon>home</mat-icon> Accueil\n    </button>\n    <!--\n      <button mat-button *ngIf=\"!isAuth\" routerLink=\"auth/signup\">\n        <mat-icon>person_add</mat-icon> Inscription\n      </button>\n    -->\n    <button mat-button *ngIf=\"!isAuth\" routerLink=\"auth/signin\">\n      <mat-icon>person</mat-icon> Connexion\n    </button>\n    <button mat-button *ngIf=\"isAuth\" (click)=\"onSignOut()\">\n      <mat-icon>input</mat-icon> Déconnexion\n    </button>\n</mat-toolbar>\n\n<mat-drawer-container>\n    <mat-drawer #drawer>\n        <button mat-stroked-button (click)=\"onResetAll()\">\n            <mat-icon>restore</mat-icon> Remise à 0\n        </button>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n//Material Module \nimport { MaterialModule } from './material.module';\n\n//Firebase Modules\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport firestoreConfig from './my-firestore';\n\n//Application Components\nimport { SuggestionFormComponent } from './suggestion-form/suggestion-form.component';\nimport { SuggestionListComponent } from './suggestion-list/suggestion-list.component';\nimport { RestaurantRankingComponent } from './restaurant-ranking/restaurant-ranking.component';\nimport { ModalComponent } from './restaurant-ranking/modal.component';\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\n//Application Services\nimport { RestaurantService } from './services/restaurant.service';\nimport { AuthService } from './services/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SuggestionFormComponent,\n    SuggestionListComponent,\n    RestaurantRankingComponent,\n    RestaurantsComponent,\n    ModalComponent,\n    SigninComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(firestoreConfig),\n    AngularFirestoreModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  providers: [\n    RestaurantService,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  signInForm: FormGroup;\n  errorMessage: string;\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.signInForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/[0-9a-zA-Z]{6,}/)]]\n    });\n  }\n\n  onSubmit() {\n    const email = this.signInForm.get('email').value;\n    const password = this.signInForm.get('password').value;\n    this.authService.signInUser(email, password).then(\n      () => {\n        this.router.navigate(['/restaurants']);\n      },\n      (error) => {\n        this.errorMessage = error;\n      }\n    );\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\">\n        <h2>Se connecter</h2>\n        <mat-error *ngIf=\"errorMessage\">\n          {{ errorMessage }}\n        </mat-error>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"Email\" formControlName=\"email\" required>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"Mot de passe\" formControlName=\"password\" required>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\">Valider</button>\n      </form>\n    </mat-card-content>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signUpForm: FormGroup;\n  errorMessage: string;\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.signUpForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/[0-9a-zA-Z]{6,}/)]]\n    });\n  }\n\n  onSubmit() {\n    const email = this.signUpForm.get('email').value;\n    const password = this.signUpForm.get('password').value;\n    this.authService.createNewUser(email, password).then(\n      () => {\n        this.router.navigate(['/restaurants']);\n      },\n      (error) => {\n        this.errorMessage = error;\n      }\n    );\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n        <h2>Inscription</h2>\n        <mat-error *ngIf=\"errorMessage\">\n          {{ errorMessage }}\n        </mat-error>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"Email\" formControlName=\"email\" required>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"Mot de passe\" formControlName=\"password\" required>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\">Valider</button>\n      </form>\n    </mat-card-content>\n  </mat-card>","import { NgModule } from '@angular/core';\n\n//Angular Material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\n\nconst materials = [\n  MatFormFieldModule,\n  MatInputModule,\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatTooltipModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatSidenavModule,\n  MatDialogModule,\n  MatCardModule\n]\n\n@NgModule({\n  imports: [\n    materials\n  ],\n  exports: [\n    materials\n  ]\n})\nexport class MaterialModule { }\n","const firebaseConfig = {\n    apiKey: \"AIzaSyAGp1Lcd5meViYGzSGRBJY2y3pDjTIupQg\",\n    authDomain: \"ng-where-to-eat-b1291.firebaseapp.com\",\n    databaseURL: \"https://ng-where-to-eat-b1291.firebaseio.com\",\n    projectId: \"ng-where-to-eat-b1291\",\n    storageBucket: \"ng-where-to-eat-b1291.appspot.com\",\n    messagingSenderId: \"391311282555\",\n    appId: \"1:391311282555:web:c927a9a2af773726af2dde\"\n  };\n\n  export default firebaseConfig;\n","import { Component, Inject } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { RestaurantService } from '../services/restaurant.service';\n\n@Component({\n  selector: 'app-modal-component',\n  template: `\n    <h2 mat-dialog-title>Supprimer ce lieu ?<br />{{ data.name }} ?</h2>\n    <mat-dialog-content class=\"mat-typography\">\n        <p>Etes-vous vraiment sûr ?<br />Les votes seront perdus pour toujours.</p>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onNoClick()\">No Thanks</button>\n        <button mat-button color=\"primary\" (click)=\"onConfirmDelete()\" cdkFocusInitial>Oui, supprimer</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class ModalComponent {\n  constructor(\n    private rs: RestaurantService,\n    public dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close('nope');\n  }\n\n  async onConfirmDelete() {\n    const result = await this.rs.deleteRestaurant(this.data);\n    this.dialogRef.close(result);\n  }\n}\n","import { Component, OnChanges, Input } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Restaurant } from './../models/restaurant';\nimport { ModalComponent } from './modal.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-restaurant-ranking',\n  templateUrl: './restaurant-ranking.component.html',\n  styleUrls: ['./restaurant-ranking.component.scss']\n})\nexport class RestaurantRankingComponent implements OnChanges {\n\n  @Input()\n  restaurants$;\n  sortedBestRestaurants: Restaurant[];\n  sortedRestOfRestaurants: Restaurant[];\n  modalResult;\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnChanges(changes): void {\n    if (!changes.restaurants$.currentValue) {\n      return;\n    }\n    changes.restaurants$.currentValue\n    .pipe(\n      map((restaurants: Restaurant[]) => {\n        const sortResult = restaurants.sort(this.sortByScore);\n        this.sortedBestRestaurants = sortResult.slice(0, 3);\n        this.sortedRestOfRestaurants = sortResult.slice(3) ? sortResult.slice(3) : [];\n        \n      })\n    ).subscribe();\n  }\n\n  sortByScore(a, b) {\n    if (a.votes > b.votes) {\n      return -1;\n    } else if(a.votes < b.votes) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  setRankLabel(restaurant) {\n    return restaurant.votes <= 1 ? `<b>${restaurant.votes} vote</b> pour ${restaurant.name}` : `<b>${restaurant.votes} votes</b> pour ${restaurant.name}`;\n  }\n\n  openConfirmDialog(restaurant) {\n    this.openDialog(restaurant);\n  }\n\n  openDialog(restaurant): void {\n    const dialogRef = this.dialog.open(ModalComponent, {\n      width: '400px',\n      data: { ...restaurant }\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.modalResult = result;\n    });\n  }\n}","<div class=\"mat-elevation-z8\" id=\"results\">\n    <h3>Top restaurants</h3>\n    <div *ngIf=\"!(restaurants$ | async)\">\n        Chargement ...\n    </div>\n\n    <div *ngIf=\"sortedBestRestaurants\">\n        <mat-selection-list [multiple]=\"false\">\n            <mat-list-option *ngFor=\"let restau of sortedBestRestaurants\" [value]=\"restau\" (click)=\"openConfirmDialog(restau)\">\n                <span [innerHTML]='setRankLabel(restau)'></span>\n            </mat-list-option>\n        </mat-selection-list>\n    </div>\n\n    <mat-accordion *ngIf=\"sortedRestOfRestaurants && sortedRestOfRestaurants.length >= 1\">\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Suite du classement\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list [multiple]=\"false\">\n                <mat-list-option *ngFor=\"let restau of sortedRestOfRestaurants\" [value]=\"restau\" (click)=\"openConfirmDialog(restau)\">\n                    <span [innerHTML]='setRankLabel(restau)'></span>\n                </mat-list-option>\n            </mat-selection-list>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.scss']\n})\nexport class RestaurantsComponent implements OnInit {\n\n  isAuth: Boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        if (user) {\n          this.isAuth = true;\n        } else {\n          this.isAuth = false;\n        }\n      }\n    );\n  }\n\n}\n","<div id=\"banner\" *ngIf=\"!isAuth\">\n    Vous n'êtes pas connecté. Aucune modification ne sera sauvegardée. \n</div>\n\n<app-suggestion-form></app-suggestion-form>\n\n<app-suggestion-list></app-suggestion-list>","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  createNewUser(email: string, password: string) {\n    return new Promise(\n      (resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n          .then(\n            () => {\n              resolve()\n            }, \n            (error) => {\n            reject(error)\n            }\n          );\n      }\n    );\n  }\n\n  signInUser(email: string, password: string) {\n    return new Promise(\n      (resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n          .then(\n            () => {\n              resolve();\n            },\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n\n  signOutUser() {\n    firebase.auth().signOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Restaurant } from '../models/restaurant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  createRestaurant(name) {\n    return this.firestore.collection('restaurants').add({\n      name, // <=> name: name\n      createdAt: Date.now(),\n      votes: 0\n    })\n  }\n\n  readRestaurants() {\n    return this.firestore.collection<Restaurant>('restaurants', (ref) => ref.orderBy('name', 'asc'));\n  }\n\n  voteForRestaurant(restaurant) {\n    return this.firestore.doc(`restaurants/${restaurant.id}`).update({\n      ...restaurant,\n      votes: restaurant.votes + 1\n    });\n  }\n\n  deleteRestaurant(restaurant) {\n    return this.firestore.doc(`restaurants/${restaurant.id}`).delete();\n  }\n\n  async resetAllRestaurants() {\n    await this.firestore.collection(\"restaurants\").get().toPromise().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n          doc.ref.update({\n              votes: 0\n          });\n      });\n    });\n  }\n  \n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormBuilder, Validators } from \"@angular/forms\";\nimport { RestaurantService } from '../services/restaurant.service';\n\n@Component({\n  selector: 'app-suggestion-form',\n  templateUrl: './suggestion-form.component.html',\n  styleUrls: ['./suggestion-form.component.scss']\n})\nexport class SuggestionFormComponent implements OnInit {\n\n  suggestionForm;\n\n  @ViewChild('formDirective') private formDirective: NgForm;\n\n  constructor(private builder: FormBuilder, private restaurantService: RestaurantService) { }\n\n  ngOnInit(): void {\n    this.suggestionForm = this.builder.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  async addRestaurant() {\n    const result = await this.restaurantService.createRestaurant(this.suggestionForm.value.name);\n    \n    this.formDirective.resetForm();\n  }\n\n}\n","<form [formGroup]=\"suggestionForm\" (ngSubmit)=\"addRestaurant()\" #formDirective=\"ngForm\">\n    <mat-form-field appearance=\"standard\">\n        <mat-label>Ajouter un restaurant</mat-label>\n        <input matInput type=\"text\" formControlName=\"name\" />\n    </mat-form-field>\n    <button mat-stroked-button color=\"primary\" type=\"submit\" [disabled]=\"!suggestionForm.valid\">Valider</button>\n</form>","<div class=\"lists\">\n    <app-restaurant-ranking [restaurants$]=\"restaurants$\"></app-restaurant-ranking>\n\n    <br />\n\n    <div>\n        <h3>Restaurants</h3>\n        <div *ngIf=\"!(restaurants$ | async)\">\n            Chargement ...\n        </div>\n        \n        <div *ngFor=\"let restau of restaurants$ | async\">\n            <div class=\"suggestion\">\n                <div>\n                    <mat-icon \n                    matTooltip='Ajouté le : {{ restau.createdAt | date: \"dd/MM/yyyy à HH:mm\" }}' \n                    matTooltipPosition=\"above\"\n                    color=\"primary\"\n                >info</mat-icon> &nbsp; {{ restau.name }}\n                </div>\n                \n                <button mat-mini-fab color=\"accent\" (click)=\"onVoted(restau)\">\n                    <mat-icon>plus_one</mat-icon>\n                </button>\n            </div>\n            <br />\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Restaurant } from '../models/restaurant';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-suggestion-list',\n  templateUrl: './suggestion-list.component.html',\n  styleUrls: ['./suggestion-list.component.scss']\n})\nexport class SuggestionListComponent implements OnInit {\n\n  restaurantsCollection: AngularFirestoreCollection<Restaurant>;\n  restaurants$: Observable<Restaurant[]>;\n\n  constructor(private restaurantService: RestaurantService) { }\n\n  async ngOnInit() {\n    this.restaurantsCollection = await this.restaurantService.readRestaurants();\n    this.restaurants$ = this.restaurantsCollection.valueChanges({ idField: 'id' }); // idfield : permet de rendre accessible l'id sous le nom 'id'\n  }\n\n  onVoted(restaurant) {\n    this.restaurantService.voteForRestaurant(restaurant);\n  }\n\n  setRankLabel(restaurant) {\n    return restaurant.votes <= 1 ? `${restaurant.votes} vote` : `${restaurant.votes} votes`;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}