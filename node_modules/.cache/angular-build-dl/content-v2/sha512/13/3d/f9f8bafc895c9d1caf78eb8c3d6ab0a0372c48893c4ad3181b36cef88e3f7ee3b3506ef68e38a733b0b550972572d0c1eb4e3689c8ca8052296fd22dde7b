{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/my-firestore.ts","webpack:///src/app/restaurant-ranking/restaurant-ranking.component.html","webpack:///src/app/restaurant-ranking/restaurant-ranking.component.ts","webpack:///src/app/restaurant-ranking/modal.component.html","webpack:///src/app/restaurants/restaurants.component.ts","webpack:///src/app/restaurants/restaurants.component.html","webpack:///src/app/services/restaurant.service.ts","webpack:///src/app/suggestion-form/suggestion-form.component.ts","webpack:///src/app/suggestion-form/suggestion-form.component.html","webpack:///src/app/suggestion-list/suggestion-list.component.html","webpack:///src/app/suggestion-list/suggestion-list.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","restauService","resetAllRestaurants","onResetAll","selector","templateUrl","styleUrls","AppModule","initializeApp","declarations","providers","bootstrap","materials","MaterialModule","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","RestaurantRankingComponent","dialog","changes","restaurants$","currentValue","pipe","restaurants","sortResult","sort","sortByScore","sortedBestRestaurants","slice","sortedRestOfRestaurants","subscribe","a","b","votes","restaurant","name","dialogRef","open","ModalComponent","width","data","restaurantService","close","deleteRestaurant","onNoClick","onConfirmDelete","RestaurantsComponent","RestaurantService","firestore","collection","add","createdAt","Date","now","ref","orderBy","doc","update","get","toPromise","querySnapshot","forEach","providedIn","SuggestionFormComponent","builder","suggestionForm","group","required","createRestaurant","value","result","formDirective","resetForm","addRestaurant","SuggestionListComponent","readRestaurants","restaurantsCollection","valueChanges","idField","voteForRestaurant","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\n\n\nconst routes: Routes = [\n  { path:'', component: RestaurantsComponent, pathMatch:'full' },\n  { path:'**', redirectTo:'' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { RestaurantService } from './services/restaurant.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  constructor(private restauService: RestaurantService) {}\n\n  onResetAll() {\n    this.restauService.resetAllRestaurants();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" (click)=\"drawer.toggle()\">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <span>On mange où ?</span>\n    <span class=\"spacer\"></span>\n    <a class=\"github-button\" href=\"https://github.com/logopolop/restaurants\" data-show-count=\"true\" aria-label=\"Star logopolop/restaurants on GitHub\">Star</a>      \n</mat-toolbar>\n\n<mat-drawer-container>\n    <mat-drawer #drawer>\n        <button mat-stroked-button (click)=\"onResetAll()\">\n            <mat-icon>restore</mat-icon> Remise à 0\n        </button>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n//Material Module \nimport { MaterialModule } from './material.module';\n\n//Firebase Modules\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport firestoreConfig from './my-firestore';\n\n//Application Components\nimport { SuggestionFormComponent } from './suggestion-form/suggestion-form.component';\nimport { SuggestionListComponent } from './suggestion-list/suggestion-list.component';\nimport { RestaurantRankingComponent } from './restaurant-ranking/restaurant-ranking.component';\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SuggestionFormComponent,\n    SuggestionListComponent,\n    RestaurantRankingComponent,\n    RestaurantsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(firestoreConfig),\n    AngularFirestoreModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\n//Angular Material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nconst materials = [\n  MatFormFieldModule,\n  MatInputModule,\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatTooltipModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatSidenavModule,\n  MatDialogModule\n]\n\n@NgModule({\n  imports: [\n    materials\n  ],\n  exports: [\n    materials\n  ]\n})\nexport class MaterialModule { }\n","const firebaseConfig = {\n    apiKey: \"AIzaSyAGp1Lcd5meViYGzSGRBJY2y3pDjTIupQg\",\n    authDomain: \"ng-where-to-eat-b1291.firebaseapp.com\",\n    databaseURL: \"https://ng-where-to-eat-b1291.firebaseio.com\",\n    projectId: \"ng-where-to-eat-b1291\",\n    storageBucket: \"ng-where-to-eat-b1291.appspot.com\",\n    messagingSenderId: \"391311282555\",\n    appId: \"1:391311282555:web:c927a9a2af773726af2dde\"\n  };\n\n  export default firebaseConfig;","<div class=\"mat-elevation-z8\" id=\"results\">\n    <h3>Top restaurants</h3>\n    <div *ngIf=\"!(restaurants$ | async)\">\n        Chargement ...\n    </div>\n\n    <div *ngIf=\"sortedBestRestaurants\">\n        <mat-selection-list [multiple]=\"false\">\n            <mat-list-option *ngFor=\"let restau of sortedBestRestaurants\" [value]=\"restau\" (click)=\"openConfirmDialog(restau)\">\n                <span [innerHTML]='setRankLabel(restau)'></span>\n            </mat-list-option>\n        </mat-selection-list>\n    </div>\n\n    <mat-accordion *ngIf=\"sortedRestOfRestaurants && sortedRestOfRestaurants.length >= 1\">\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Suite du classement\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-selection-list [multiple]=\"false\">\n                <mat-list-option *ngFor=\"let restau of sortedRestOfRestaurants\" [value]=\"restau\" (click)=\"openConfirmDialog(restau)\">\n                    <span [innerHTML]='setRankLabel(restau)'></span>\n                </mat-list-option>\n            </mat-selection-list>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n\n","import { Component, Input, OnChanges, Inject } from '@angular/core';\nimport { map } from \"rxjs/operators\";\nimport { Restaurant } from '../models/restaurant';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RestaurantService } from '../services/restaurant.service';\n\n@Component({\n  selector: 'app-restaurant-ranking',\n  templateUrl: './restaurant-ranking.component.html',\n  styleUrls: ['./restaurant-ranking.component.scss']\n})\nexport class RestaurantRankingComponent implements OnChanges {\n\n  @Input()\n  restaurants$;\n  sortedBestRestaurants: Restaurant[];\n  sortedRestOfRestaurants: Restaurant[];\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnChanges(changes): void {\n    if (!changes.restaurants$.currentValue) {\n      return;\n    }\n    changes.restaurants$.currentValue\n    .pipe(\n      map((restaurants: Restaurant[]) => {\n        const sortResult = restaurants.sort(this.sortByScore);\n        this.sortedBestRestaurants = sortResult.slice(0, 3);\n        this.sortedRestOfRestaurants = sortResult.slice(3) ? sortResult.slice(3) : [];\n        \n      })\n    ).subscribe();\n  }\n\n  sortByScore(a, b) {\n    if (a.votes > b.votes) {\n      return -1;\n    } else {\n      return 1;\n    }\n    return 0;\n  }\n\n  setRankLabel(restaurant) {\n    return restaurant.votes <= 1 ? `<b>${restaurant.votes} vote</b> pour ${restaurant.name}` : `<b>${restaurant.votes} votes</b> pour ${restaurant.name}`;\n  }\n\n  openConfirmDialog(restaurant): void {\n    const dialogRef = this.dialog.open(ModalComponent, {\n      width: '400px',\n      data: { ...restaurant }\n    });\n  }\n}\n\n@Component({\n  selector: 'app-modal-component',\n  templateUrl: './modal.component.html',\n})\nexport class ModalComponent {\n\n  constructor(\n      private restaurantService: RestaurantService,\n      public dialogRef: MatDialogRef<ModalComponent>, \n      @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick() {\n      this.dialogRef.close();\n  }\n\n  async onConfirmDelete() {\n      await this.restaurantService.deleteRestaurant(this.data);\n      this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Supprimer ce lieu ?<br />{{ data.name }} ?</h2>\n<div mat-dialog-content>\n    <p>Etes-vous vraiment sûr ?<br />Les votes seront perdus pour toujours.</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-button color=\"primary\" (click)=\"onNoClick()\">No Thanks</button>\n    <button mat-button color=\"primary\" (click)=\"onConfirmDelete()\" cdkFocusInitial>Oui, supprimer</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.scss']\n})\nexport class RestaurantsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"banner\">\n    Vous n'êtes pas connecté. Aucune modification ne sera sauvegardée. \n</div>\n\n<app-suggestion-form></app-suggestion-form>\n\n<app-suggestion-list></app-suggestion-list>","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Restaurant } from '../models/restaurant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  createRestaurant(name) {\n    return this.firestore.collection('restaurants').add({\n      name, // <=> name: name\n      createdAt: Date.now(),\n      votes: 0\n    })\n  }\n\n  readRestaurants() {\n    return this.firestore.collection<Restaurant>('restaurants', (ref) => ref.orderBy('name', 'asc'));\n  }\n\n  voteForRestaurant(restaurant) {\n    return this.firestore.doc(`restaurants/${restaurant.id}`).update({\n      ...restaurant,\n      votes: restaurant.votes + 1\n    });\n  }\n\n  deleteRestaurant(restaurant) {\n    return this.firestore.doc(`restaurants/${restaurant.id}`).delete();\n  }\n\n  async resetAllRestaurants() {\n    await this.firestore.collection(\"restaurants\").get().toPromise().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n          doc.ref.update({\n              votes: 0\n          });\n      });\n    });\n  }\n  \n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormBuilder, Validators } from \"@angular/forms\";\nimport { RestaurantService } from '../services/restaurant.service';\n\n@Component({\n  selector: 'app-suggestion-form',\n  templateUrl: './suggestion-form.component.html',\n  styleUrls: ['./suggestion-form.component.scss']\n})\nexport class SuggestionFormComponent implements OnInit {\n\n  suggestionForm;\n\n  @ViewChild('formDirective') private formDirective: NgForm;\n\n  constructor(private builder: FormBuilder, private restaurantService: RestaurantService) { }\n\n  ngOnInit(): void {\n    this.suggestionForm = this.builder.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  async addRestaurant() {\n    const result = await this.restaurantService.createRestaurant(this.suggestionForm.value.name);\n    \n    this.formDirective.resetForm();\n  }\n\n}\n","<form [formGroup]=\"suggestionForm\" (ngSubmit)=\"addRestaurant()\" #formDirective=\"ngForm\">\n    <mat-form-field appearance=\"standard\">\n        <mat-label>Ajouter un restaurant</mat-label>\n        <input matInput type=\"text\" formControlName=\"name\" />\n    </mat-form-field>\n    <button mat-stroked-button color=\"primary\" type=\"submit\" [disabled]=\"!suggestionForm.valid\">Valider</button>\n</form>","<div class=\"lists\">\n    <app-restaurant-ranking [restaurants$]=\"restaurants$\"></app-restaurant-ranking>\n\n    <br />\n\n    <div>\n        <h3>Restaurants</h3>\n        <div *ngIf=\"!(restaurants$ | async)\">\n            Chargement ...\n        </div>\n        \n        <div *ngFor=\"let restau of restaurants$ | async\">\n            <div class=\"suggestion\">\n                <div>\n                    <mat-icon \n                    matTooltip='Ajouté le : {{ restau.createdAt | date: \"dd/MM/yyyy à HH:mm\" }}' \n                    matTooltipPosition=\"above\"\n                    color=\"primary\"\n                >info</mat-icon> &nbsp; {{ restau.name }}\n                </div>\n                \n                <button mat-mini-fab color=\"accent\" (click)=\"onVoted(restau)\">\n                    <mat-icon>plus_one</mat-icon>\n                </button>\n            </div>\n            <br />\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Restaurant } from '../models/restaurant';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-suggestion-list',\n  templateUrl: './suggestion-list.component.html',\n  styleUrls: ['./suggestion-list.component.scss']\n})\nexport class SuggestionListComponent implements OnInit {\n\n  restaurantsCollection: AngularFirestoreCollection<Restaurant>;\n  restaurants$: Observable<Restaurant[]>;\n\n  constructor(private restaurantService: RestaurantService) { }\n\n  async ngOnInit() {\n    this.restaurantsCollection = await this.restaurantService.readRestaurants();\n    this.restaurants$ = this.restaurantsCollection.valueChanges({ idField: 'id' }); // idfield : permet de rendre accessible l'id sous le nom 'id'\n  }\n\n  onVoted(restaurant) {\n    this.restaurantService.voteForRestaurant(restaurant);\n  }\n\n  setRankLabel(restaurant) {\n    return restaurant.votes <= 1 ? `${restaurant.votes} vote` : `${restaurant.votes} votes`;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}